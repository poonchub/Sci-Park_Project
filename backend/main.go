package main

import (
	"net/http"
	"sci-park_web-application/config"
	"sci-park_web-application/middlewares"
	"sci-park_web-application/controller"

	"github.com/gin-gonic/gin"
)

const PORT = "8000"

func main() {
	// ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å .env ‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
	config.LoadEnv()
	config.ConnectionDB()
	config.SetupDatabase()

	// ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ CORS Middleware
	r := gin.Default()
	r.Use(CORSMiddleware())

	// üåç Public API (‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ Token)
	public := r.Group("/")
	{
		public.POST("/auth/login", controller.UserLogin)
		
	}

	// üîí Protected API (‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ Token)
	protected := r.Group("/")
	protected.Use(middlewares.Authorizes()) // ‚úÖ Middleware ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Token
	{

		// protected.GET("/users", controller.GetAllUsers)
		
	}

	// üåç Root Route
	r.GET("/", func(c *gin.Context) {
		c.String(http.StatusOK, "API RUNNING... PORT: %s", PORT)
	})

	// üöÄ Start Server
	r.Run("localhost:" + PORT) // ‚úÖ ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏Ç‡πà‡∏≤‡∏¢‡∏≠‡∏∑‡πà‡∏ô
}

// üõ† CORS Middleware
func CORSMiddleware() gin.HandlerFunc {
	return func(c *gin.Context) {
		c.Writer.Header().Set("Access-Control-Allow-Origin", "*")
		c.Writer.Header().Set("Access-Control-Allow-Credentials", "true")
		c.Writer.Header().Set("Access-Control-Allow-Headers", "Content-Type, Authorization")
		c.Writer.Header().Set("Access-Control-Allow-Methods", "POST, OPTIONS, GET, PUT, DELETE")

		if c.Request.Method == "OPTIONS" {
			c.AbortWithStatus(204)
			return
		}

		c.Next()
	}
}
